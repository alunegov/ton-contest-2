"TonUtil.fif" include
"Asm.fif" include

"code.fif" include <s constant code

<b false 1 i, // round
  false 1 i, // old_round
  0 Gram, // comsa
  0 32 u, // seqno
  "lottery.pk" load-generate-keypair constant lottery_pk B, // owner pubkey
b> constant storage

"lottery.addr" load-address-verbose 2constant lottery_addr

// addr_std
<b b{100} s, lottery_addr addr, b> <s =: contract_address_full

0 tuple 0x076ef1ea , // magic
0 , 0 , // actions msg_sents
now , // unix_time
now , now , 0 , // block_lt, trans_lt, rand_seed
0 tuple 9223372036854775807 , dictnew , , // remaining balance
contract_address_full , dictnew , // contract_address, global_config
1 tuple // wrap to another tuple
constant c7

// storage - 
{
."    prize_fund" cr
79045 code 2 roll c7 runvmctx
drop  // storage
."Exit code " dup . cr abort"FAIL exit_code"
."r1: " .GR cr
} : prize_fund

// storage exp_prize_find - 
{
."    expecting prize_fund " dup .GR cr
79045 code 3 roll c7 runvmctx
drop  // storage
."Exit code " dup . cr abort"FAIL exit_code"
."r1: " dup .GR cr = not abort"FAIL r1"
} : check_prize_fund

// storage - 
{
."    lucky_nums" cr
84929 code 2 roll c7 runvmctx
// .s cr
drop  // storage
."Exit code " dup . cr abort"FAIL exit_code"
."r1: " <s csr. cr
} : lucky_nums

// storage - 
{
."    winners" cr
128887 code 2 roll c7 runvmctx
// .s cr
drop  // storage
."Exit code " dup . cr abort"FAIL exit_code"
dup null? { drop } { <s csr. } cond
{ ."r: " .GR cr } 3 times  // p1 p2 p3
} : winners

// storage wc addr - 
{
."    is_winner for " dup . cr
118635 code 4 roll c7 runvmctx
// .s cr
drop  // storage
."Exit code " dup . cr abort"FAIL exit_code"
."r1: " .GR cr
} : is_winner

// storage - 
{
."    comsa" cr
98949 code 2 roll c7 runvmctx
drop  // storage
."Exit code " dup . cr abort"FAIL exit_code"
."r1: " .GR cr
} : comsa

storage 0 Gram* check_prize_fund

."inc prize_fund" cr
98 Gram* <b b{0000} s, b{100} s, lottery_addr addr, b> <b 2 32 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

storage 98 Gram* check_prize_fund

."buy ticket 0_p1" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 1 256 u, b> <b 1 32 u, 0xd 8 u, 0xc 8 u, 0x4f 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 0_p2" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 2 256 u, b> <b 1 32 u, 0x7 8 u, 0x1 8 u, 0x2 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."idle withdraw_prize 0_p2" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 2 256 u, b> <b 3 32 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

storage 100 Gram* check_prize_fund

storage lucky_nums
storage winners

."conduct round" cr
// msg_seqno, valid_until, op
<b 0 32 u, -1 32 i, 2 32 u, b>
dup hashu lottery_pk ed25519_sign_uint
<b swap B, swap <s s, b> <s
recv_external code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

storage lucky_nums
storage winners
storage 0 1 is_winner
storage 0 2 is_winner

."withdraw_prize 0_p2" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 2 256 u, b> <b 3 32 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

// check_prize_fund only works in debug non-random lucky_nums mode (0, 1, 2)
 storage 75 Gram* check_prize_fund
storage prize_fund

0 halt

."buy ticket 1_p1" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 1 256 u, b> <b 1 32 u, 0xd 8 u, 0xc 8 u, 0x4f 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 1_p2" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 2 256 u, b> <b 1 32 u, 0x1d 8 u, 0x1c 8 u, 0x4a 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 1_p3" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 3 256 u, b> <b 1 32 u, 0x2d 8 u, 0x2c 8 u, 0x4b 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 1_p4" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 4 256 u, b> <b 1 32 u, 0x3d 8 u, 0x3c 8 u, 0x4c 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 1_p5" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 5 256 u, b> <b 1 32 u, 0x4d 8 u, 0x4c 8 u, 0x30 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 1_p6" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 6 256 u, b> <b 1 32 u, 0x13 8 u, 0x14 8 u, 0x15 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 1_p7" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 7 256 u, b> <b 1 32 u, 0x21 8 u, 0x22 8 u, 0x23 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."conduct round" cr
// msg_seqno, valid_until, op
<b 1 32 u, -1 32 i, 2 32 u, b>
dup hashu lottery_pk ed25519_sign_uint
<b swap B, swap <s s, b> <s
recv_external code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

storage lucky_nums
storage winners

storage prize_fund
storage comsa

 storage 79540000000 check_prize_fund

."buy ticket 2_p1" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 1 256 u, b> <b 1 32 u, 0x0 8 u, 0x1 8 u, 0x2 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."rejected buy ticket 2_p1 again" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 1 256 u, b> <b 1 32 u, 0x0 8 u, 0x1 8 u, 0x2 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."rejected buy ticket 2_p2 same nums" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 2 256 u, b> <b 1 32 u, 0x0 8 u, 0x2 8 u, 0x2 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."rejected buy ticket 2_p3 out-of-range nums" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 3 256 u, b> <b 1 32 u, 0x0 8 u, 0x2 8 u, 0x64 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 2_p4 with change" cr
// Grams as int, CommonMsgInfo$0 as cell, 
2 Gram* <b b{0000} s, b{100} s, 0 8 i, 4 256 u, b> <b 1 32 u, 0x0 8 u, 0x1 8 u, 0x2 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 2_p5 from simple transfer with comment" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, 0 8 i, 5 256 u, b> <b 0 32 u, "0 1 2" $, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

."buy ticket 2_p6 from wc = -1" cr
// Grams as int, CommonMsgInfo$0 as cell, 
1 Gram* <b b{0000} s, b{100} s, -1 8 i, 6 256 u, b> <b 1 32 u, 0x10 8 u, 0x11 8 u, 0x12 8 u, b> <s
recv_internal code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

 storage 83540000000 check_prize_fund
storage prize_fund

."conduct round" cr
// msg_seqno, valid_until, op
<b 2 32 u, -1 32 i, 2 32 u, b>
dup hashu lottery_pk ed25519_sign_uint
<b swap B, swap <s s, b> <s
recv_external code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

 storage 30909800000 check_prize_fund
storage prize_fund
storage comsa

."conduct round with no participants - prolong round" cr
// msg_seqno, valid_until, op
<b 3 32 u, -1 32 i, 2 32 u, b>
dup hashu lottery_pk ed25519_sign_uint
<b swap B, swap <s s, b> <s
recv_external code storage c7 runvmctx
."Updated storage: " cr dup =: storage <s csr. cr
."Exit code " dup . cr abort"FAIL exit_code"

 storage 30909800000 check_prize_fund
storage prize_fund
storage comsa


cr

lottery_addr .addr cr
// lottery_addr 6 .Addr cr

// " 0123456789" =: comment
// comment simple-transfer-body
// <s csr.